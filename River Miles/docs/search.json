[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "River Miles",
    "section": "",
    "text": "Introduction:\nA while back, I was walking to my office when a former professor stopped me with a coding question. He wanted to create a map in R that highlighted specific river segments based on River Miles—a measurement of distance traveled along a river’s course rather than a straight-line distance.\nI suspected this was a common challenge for many scientists, but a quick internet search didn’t reveal a straightforward solution. Since this process could be helpful to other researchers, I’ve written this guide to explain how to achieve it step by step.\n\n\nPackages + Data:\nThis workflow requires only a few packages.\nThe data for this workflow can be found here: https://geospatial-usace.opendata.arcgis.com/datasets/604cdc08fe7d43cb90a0584a0b198875/explore. I have downloaded it and saved it to my working directory for this R project.\n\nmarkers &lt;- read.csv(\"rivermm.csv\")\n\n\n\nWorking with Spatial Features:\nFirst I:\n\nFilter for the river and area of interest\nUses the Longitude and Latitude Column to create a data frame with each point placed in a spatial context\nSet the Coordinate Reference System to the correct one\n\nThen I’ll make a second spatial features object that contains the markers that denote our area of interest.\n\n#Convert to spatial features object\nmiss_markers &lt;- markers %&gt;% \n  filter(RIVER_NAME == \"MISSISSIPPI-LO\") %&gt;%\n  st_as_sf(coords = c(\"LONGITUDE1\", \"LATITUDE1\")) %&gt;%\n  st_set_crs(4326) \n \n#Grab start and stop markers for our study area\nstudy_markers &lt;- miss_markers %&gt;% \n  filter(MILE %in% c(715, 753, 762, 774, 829, 854))\n\nUsing the dataset, I can combine all the river markers to form a single polyline—in this case, the Mississippi River. While I could download a separate dataset containing a polyline for the river, connecting data points from the same dataset to form the river offers two advantages.\nFirst, I can ensure that my markers and the river align spatially. This means the markers will be located directly on the river, eliminating the need to snap them to the nearest river segment.\nSecond, I avoid the additional steps of verifying that a second dataset uses the same CRS (coordinate reference system) and projection, as well as filtering out extraneous river segments.\n\n#Connect river markers to form the River  \nriver &lt;- miss_markers %&gt;%\n  arrange(MILE) %&gt;%\n  st_combine() %&gt;%\n  st_cast('LINESTRING')\n\nNow I can convert this River to a network which consists of nodes (points) and edges (the connections between those points). Currently the river consists of a singular edge with a nodes at each end. I will add in the study markers we pulled out earlier and reference points to split the river by.\n\n#Convert to network object\nriver &lt;- as_sfnetwork(river)\n\n#Add in split points\nrivernetwork &lt;- st_network_blend(river, study_markers)\n\nNow we simply need to add variable to map our colors to for plotting purposes.\n\n#Add varible to specify highlighting the river segment\nmiss &lt;- rivernetwork %&gt;% \n  activate(\"edges\") %&gt;%\n  mutate(highlight = rep(c(\"No\",\"Yes\"), length.out = 7)) %&gt;%\n  st_as_sf()\n\n\n\nPlotting:\nI’ll be plotting using ggmap. If you haven’t used this package before, you will need to get your free API key. Then you will input that using: register_stadiamaps(key = \"Copy and Paste you API Key Here\"). Once that is completed, mapping is quite simple!\n\n#Get a base map; I did manually, but can get from X and Y values in \"markers\"\nbasemap &lt;- get_stadiamap(bbox = c(left = -90.35,\n                                  right = -89.55,\n                                  bottom = 34.97,\n                                  top = 36.26), \n                         zoom = 10, \n                         maptype = \"alidade_smooth\")\n\nℹ © Stadia Maps © Stamen Design © OpenMapTiles © OpenStreetMap contributors.\n\n#Plot\nggmap(basemap) +\n  geom_sf(data = miss,\n          mapping = aes(color = highlight),\n          linewidth = 2,\n          inherit.aes = FALSE) +\n  labs(x = \"\",\n       y = \"\",\n       color = \"Study Area\")\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]